<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>任務倒數第9天</title>
    <link rel="stylesheet" href="/stylesheets/style.css">
    <link rel="stylesheet" href="/stylesheets/task-7.css">
    <script src="/scripts/common.js"></script>
    <style>
        /* 禁用操作的樣式 */
        .disabled-container {
            pointer-events: none;
            opacity: 0.5;
        }

        /* 確保媒體容器寬度一致 */
        .media-wrapper {
            width: 100%;
            max-width: 90%;
            /* 限制寬度，避免過寬 */
            margin: 0 auto;
            /* 居中 */
            text-align: center;
        }

        .media-wrapper img,
        .media-wrapper video {
            width: 100%;
            height: auto;
            display: block;
        }
    </style>
</head>

<body>
    <div class="container">
        <!-- 圖片與行動區域 -->
        <div class="media-wrapper">
            <img src="/images/D09/750x1200-Day9_KV.png" alt="任務圖片">
            <video class="video-container" controls controlsList="nodownload noremoteplayback" id="taskVideo">
                <source
                    src="https://pmi-salesforce.videomarketingplatform.co/64968575/111368416/2247ee998bfd2636430035dd9087e841/video_hd/d9iqosvideo0312-9-video.mp4"
                    type="video/mp4">
                您的瀏覽器不支援 HTML5 影片標籤。
            </video>
            <img src="/images/D09/750x1200-Day9_content.png" alt="任務圖片" class="content-image">
            <div class="action-container disabled-container">
                <div class="checkbox-container">
                    <input type="checkbox" id="taskCompletedCheckbox">
                    <label for="taskCompletedCheckbox">我已完成【今日任務內容】</label>
                </div>
                <div>
                    <% if (!isCompleted && task.TaskDate===currentDate) { %>
                        <button class="button" id="complete-task-btn">
                            <img src="/images/D09/750x1200-CTA_01.png" alt="提交按鈕">
                        </button>
                        <% } else if (isCompleted) { %>
                            <button class="button" id="complete-task-btn">
                                <img src="/images/D09/750x1200-CTA_02.png" alt="已完成按鈕">
                            </button>
                            <% } else { %>
                                <div class="button" id="complete-task-btn">
                                    <img src="/images/750x1200-CTA_01_grey.png" alt="已完成按鈕">
                                </div>
                                <% } %>
                </div>
            </div>
            <!-- 扭蛋相關 -->
            <div class="gacha-wrapper hidden">
                <img class="Gacha-img" src="/images/D09/扭蛋.png" alt="扭蛋圖片">
                <div class="Gacha-Container">
                    <img src="/images/D09/扭蛋-CTA_02.png" alt="扭蛋圖片" id="lotteryImage">
                </div>
            </div>
        </div>



        <!-- 獎勵訊息 -->
        <div id="rewardMessage" class="hidden">
            <img class="close-button" src="/images/PopUp/X.png" alt="關閉獎勵提示按鈕">
            <img class="reward-img" src="/images/PopUp/點擊領取獎勵金popup-1.png" alt="獎勵圖片">
        </div>

        <!-- 彈窗內容 -->
        <div id="popup" class="popup hidden">
            <div class="popup-content">
                <p>更多訊息</p>
                <button class="close-popup">關閉</button>
            </div>
        </div>
    </div>

    <!-- 冷凍層 -->
    <div id="freezeLayer" class="hidden"></div>

     <script nonce="<%= nonce %>">
        // 初始化 sessionStorage
        initializeSessionStorage('<%= contactId %>');

        // 定義 DOM 元素和常量
        document.addEventListener('DOMContentLoaded', () => {
            const elements = {
                popup: document.getElementById('popup'),
                closePopupButton: document.querySelector('.close-popup'),
                checkbox: document.getElementById('taskCompletedCheckbox'),
                button: document.getElementById('complete-task-btn'),
                buttonImg: document.querySelector('#complete-task-btn img'),
                freezeLayer: document.getElementById('freezeLayer'),
                rewardMessage: document.getElementById('rewardMessage'),
                closeRewardButton: document.querySelector('#rewardMessage .close-button'),
                taskVideo: document.getElementById('taskVideo'),
                gachaContainer: document.querySelector('.gacha-wrapper'),
                gachaImg: document.querySelector('.Gacha-img'),
                actionContainer: document.querySelector('.action-container'),
                lotteryImage: document.getElementById('lotteryImage'),
            };

            const constants = {
                taskCompletedSrc: '/images/D09/750x1200-CTA_02.png',
                taskIncompleteSrc: '/images/D09/750x1200-CTA_01.png',
                rewardApiEndpoint: '/task/7/complete',
            };

            // 更新按鈕狀態
            const updateButtonState = () => {
                const isCheckboxChecked = elements.checkbox.checked;
                let isCompleted;
                // 檢查是否存在圖片
                if (elements.buttonImg) {
                    const buttonImgSrc = elements.buttonImg.getAttribute('src');
                    console.log('按鈕圖片:', buttonImgSrc);

                    // 判斷是否是指定的提交圖片，並且按鈕非完成狀態
                    isCompleted = buttonImgSrc === constants.taskCompletedSrc; // 檢查是否完成
                    elements.button.disabled = !isCheckboxChecked || isCompleted || buttonImgSrc !== constants.taskIncompleteSrc;

                    console.log('按鈕是否已完成:', isCompleted);

                } else {
                    console.log('按鈕未包含圖片');
                }
                elements.button.style.opacity = elements.button.disabled ? 0.5 : 1;
            };
            // 彈窗邏輯
            const setupPopupEvents = () => {
                elements.closePopupButton.addEventListener('click', () => elements.popup.classList.add('hidden'));
                elements.popup.addEventListener('click', (event) => {
                    if (event.target === elements.popup) {
                        elements.popup.classList.add('hidden');
                    }
                });
            };

            // 提交任務完成
            const completeTask = async () => {
                if (elements.button.disabled) return;

                const userId = sessionStorage.getItem('ContactId');
                elements.button.disabled = true;
                elements.buttonImg.setAttribute('src', constants.taskCompletedSrc);
                elements.freezeLayer.classList.add('active');

                try {
                    const response = await fetch(constants.rewardApiEndpoint, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ UserId: userId }),
                    });

                    if (!response.ok) {
                        throw new Error(`HTTP 錯誤！狀態碼: ${response.status}`);
                    }

                    elements.rewardMessage.classList.remove('hidden');
                    elements.gachaContainer.classList.remove('hidden');
                    elements.gachaImg.classList.remove('hidden');
                } catch (error) {
                    console.error('提交失敗:', error);
                } finally {
                    elements.freezeLayer.classList.remove('active');
                }
            };

            // 影片結束啟用操作
            const setupVideoEvents = () => {
                elements.actionContainer.classList.add('disabled-container'); // 禁用行動區域
                elements.taskVideo.addEventListener('ended', () => {
                    elements.actionContainer.classList.remove('disabled-container'); // 啟用行動區域
                });
            };

            // 初始化事件監聽
            const initializeEvents = () => {
                elements.checkbox.addEventListener('change', updateButtonState);
                elements.button.addEventListener('click', completeTask);
                elements.closeRewardButton.addEventListener('click', () => elements.rewardMessage.classList.add('hidden'));
                elements.lotteryImage.addEventListener('click', () => {
                    window.location.href = '/lottery/bounce' + window.location.search;
                });
                setupPopupEvents();
                setupVideoEvents();
            };

            // 初始化
            updateButtonState();
            initializeEvents();
        });
    </script>
</body>

</html>