<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>任務倒數第4天</title>
    <link rel="stylesheet" href="/stylesheets/style.css">
    <link rel="stylesheet" href="/stylesheets/task-12.css">
    <script src="/scripts/common.js"></script>
</head>

<body>
    <div class="container">
        <img src="/images/D04/750x1200-Day4_01.png" alt="任務圖片" id="img-02" class="clickable" loading="lazy">
        <!-- 預設顯示的圖片 -->
        <img src="/images/D04/750x1200-Day4_02.png" alt="任務圖片" id="img-02" class="clickable" loading="lazy">

        <!-- 隱藏的圖片 -->
        <img src="/images/D04/750x1200-Day4_03.png" alt="任務圖片" id="img-03" class="hidden" loading="lazy">
        <img src="/images/D04/750x1200-Day4_04.png" alt="任務圖片" id="img-04" class="clickable" loading="lazy">
        <img src="/images/D04/750x1200-Day4_05.png" alt="任務圖片" id="img-05" class="hidden" loading="lazy">
        <img src="/images/D04/750x1200-Day4_06.png" alt="任務圖片" id="img-06" class=" clickable" loading="lazy">
        <img src="/images/D04/750x1200-Day4_07.png" alt="任務圖片" id="img-07" class="hidden" loading="lazy">
        <img src="/images/D04/750x1200-Day4_08.png" alt="任務圖片" id="img-08" class=" clickable" loading="lazy">
        <img src="/images/D04/750x1200-Day4_09.png" alt="任務圖片" id="img-09" class="hidden" loading="lazy">
        <img src="/images/D04/750x1200-Day4_10.png" alt="任務圖片" id="img-10" class=" clickable" loading="lazy">
        <img src="/images/D04/750x1200-Day4_11.png" alt="任務圖片" id="img-11" class="hidden" loading="lazy">
        <img src="/images/D04/750x1200-Day4_12.png" alt="任務圖片" id="img-12" class=" clickable" loading="lazy">
        <img src="/images/D04/750x1200-Day4_13.png" alt="任務圖片" id="img-13" class="hidden" loading="lazy">



        <!-- 彈窗內容 -->
        <div id="popup" class="popup hidden">
            <div class="popup-content">
                <p>更多訊息</p>
                <button class="close-popup">關閉</button>
            </div>
        </div>

        <!-- 行動區域 -->
        <div class="relative-container">
            <img src="/images/D04/750x1200-Day4_14.png" alt="任務圖片" id="img-14" loading="lazy">
            <!-- 更多訊息 -->
            <img class="read-more-img" src="/images/D04/D4-CTA.png" alt="更多圖片">
            <div class="action-container disabled" style="pointerEvents: none; opacity: 0.5;">

                <div class="checkbox-container">
                    <input type="checkbox" id="taskCompletedCheckbox">
                    <label for="taskCompletedCheckbox">我已完成【今日任務內容】</label>
                </div>
                <div>
                    <% if (!isCompleted && task.TaskDate===currentDate) { %>
                        <button class="button" id="complete-task-btn">
                            <img src="/images/D04/750x1200-CTA_01.png" alt="提交按鈕">
                        </button>
                        <% } else if (isCompleted) { %>
                            <button class="button" id="complete-task-btn">
                                <img src="/images/D04/750x1200-CTA_02.png" alt="已完成按鈕">
                            </button>
                            <% } else { %>
                                <div class="button" id="complete-task-btn">
                                    <img src="/images/750x1200-CTA_01_grey.png" alt="已完成按鈕">
                                </div>
                                <% } %>
                </div>
            </div>
        </div>
        <!-- 獎勵訊息 -->
        <div id="rewardMessage" class="hidden">
            <img class="close-button" src="/images/PopUp/X.png" alt="關閉獎勵提示按鈕">
            <img class="reward-img" src="/images/PopUp/點擊領取獎勵金popup-2.png" alt="獎勵圖片">
        </div>
    </div>

    <!-- 凍結層 -->
    <div id="freezeLayer" class="hidden"></div>

    <script nonce="<%= nonce %>">
        // 初始化 sessionStorage
        initializeSessionStorage('<%= contactId %>');

        // 定義 DOM 元素和常量
        document.addEventListener('DOMContentLoaded', () => {
            const imageMap = {
                "img-02": ["img-03",],
                "img-04": ["img-05",],
                "img-06": ["img-07",],
                "img-08": ["img-09",],
                "img-10": ["img-11",],
                "img-12": ["img-13"]
            };
            const elements = {
                popup: document.getElementById('popup'),
                closePopupButton: document.querySelector('.close-popup'),
                readMoreImg: document.querySelector('.read-more-img'),
                checkbox: document.getElementById('taskCompletedCheckbox'),
                button: document.getElementById('complete-task-btn'),
                buttonImg: document.querySelector('#complete-task-btn img'),
                freezeLayer: document.getElementById('freezeLayer'),
                rewardMessage: document.getElementById('rewardMessage'),
                closeRewardButton: document.querySelector('#rewardMessage .close-button'),
                rewardImg: document.querySelector('.reward-img'),
                actionContainer: document.querySelector('.action-container')
            };
            const requiredImages = ["img-02", "img-04", "img-06", "img-08", "img-10", "img-12"]; // 必須點擊的圖片 ID
            const clickedImages = new Set(); // 用於記錄已點擊的圖片 ID
            // 為可點擊的圖片添加點擊事件
            document.querySelectorAll('.clickable').forEach(img => {
                const stateMap = new Map();

                document.querySelectorAll('.clickable').forEach(img => {
                    const stateMap = new Map();

                    img.addEventListener('click', () => {
                        const nextImages = imageMap[img.id];
                        if (nextImages) {
                            const updatedStates = nextImages.map(nextId => {
                                const nextImg = document.getElementById(nextId);
                                if (nextImg) {
                                    const isVisible = stateMap.get(nextId) || false;
                                    stateMap.set(nextId, !isVisible);
                                    return { nextImg, isVisible };
                                }
                            });

                            updatedStates.forEach(({ nextImg, isVisible }) => {
                                nextImg.classList.toggle('hidden', isVisible);
                            });
                            clickedImages.add(img.id); // 記錄點擊過的圖片 ID
                            console.log(`已點擊: ${Array.from(clickedImages).join(", ")}`);

                            // img-12 的特例處理
                            if (img.id === "img-12") {
                                const shouldHide = updatedStates.some(({ isVisible }) => isVisible);
                            }
                            // 檢查是否所有圖片都已點擊
                            if (requiredImages.every(id => clickedImages.has(id))) {
                                console.log('所有圖片已點擊，啟用 action-container');
                                elements.actionContainer.classList.remove('disabled');
                                elements.actionContainer.style.pointerEvents = 'auto'; // 啟用交互
                                elements.actionContainer.style.opacity = 1; // 恢復正常狀態
                            }

                        }
                    });
                });


            });


            const constants = {
                taskCompletedSrc: '/images/D04/750x1200-CTA_02.png',
                taskIncompleteSrc: '/images/D04/750x1200-CTA_01.png',
                rewardApiEndpoint: '/task/12/complete',
            };

            // 更新按鈕狀態
            const updateButtonState = () => {
                const isCheckboxChecked = elements.checkbox.checked;
                let isCompleted;
                // 檢查是否存在圖片
                if (elements.buttonImg) {
                    const buttonImgSrc = elements.buttonImg.getAttribute('src');
                    console.log('按鈕圖片:', buttonImgSrc);

                    // 判斷是否是指定的提交圖片，並且按鈕非完成狀態
                    isCompleted = buttonImgSrc === constants.taskCompletedSrc; // 檢查是否完成
                    elements.button.disabled = !isCheckboxChecked || isCompleted || buttonImgSrc !== constants.taskIncompleteSrc;

                    console.log('按鈕是否已完成:', isCompleted);

                } else {
                    console.log('按鈕未包含圖片');
                }
                elements.button.style.opacity = elements.button.disabled ? 0.5 : 1;
            };

            // 彈窗邏輯
            const setupPopupEvents = () => {
                elements.rewardImg.addEventListener('click', () => navigateToParent('task-list'));
                elements.readMoreImg.addEventListener('click', () => navigateToParent('dummy-site'));
                elements.closePopupButton.addEventListener('click', () => elements.popup.classList.add('hidden'));
                elements.popup.addEventListener('click', (event) => {
                    if (event.target === elements.popup) {
                        elements.popup.classList.add('hidden');
                    }
                });
            };

            // 提交任務完成邏輯
            const completeTask = async () => {
                if (elements.button.disabled) return;

                const userId = sessionStorage.getItem('ContactId');
                elements.button.disabled = true;
                elements.buttonImg.setAttribute('src', constants.taskCompletedSrc);
                elements.freezeLayer.classList.add('active');

                try {
                    const response = await fetch(constants.rewardApiEndpoint, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ UserId: userId }),
                    });

                    if (!response.ok) {
                        throw new Error(`HTTP錯誤！狀態碼: ${response.status}`);
                    }

                    elements.rewardMessage.classList.remove('hidden');
                } catch (error) {
                    console.error('提交失敗:', error);
                } finally {
                    elements.freezeLayer.classList.remove('active');
                }
            };

            // 初始化事件監聽
            const initializeEvents = () => {
                elements.checkbox.addEventListener('change', updateButtonState);
                elements.button.addEventListener('click', completeTask);
                setupPopupEvents();
                elements.closeRewardButton.addEventListener('click', () => {
                    elements.rewardMessage.style.display = 'none';
                });
            };

            // 初始化
            updateButtonState();
            initializeEvents();
        });
    </script>
</body>

</html>